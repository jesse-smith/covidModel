% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrate.R
\name{vec_fun}
\alias{vec_fun}
\title{Convert a Vector to a Continuous Function}
\usage{
vec_fun(y, x = NULL, ties = "ordered")
}
\arguments{
\item{x}{A vector to convert to a continuous function}

\item{ties}{\code{"ordered"}, a function that takes a single numeric vector and
returns a single number, or a list of length 2 with components meeting the
previous specifications. See the documentation for \code{ties} and "Details" in
\code{\link[stats:approx]{approx()}} for further explanation.}

\item{i}{An optional vector defining the input values for each output \code{x}}
}
\value{
A function with arguments \code{x} and \code{deriv} that returns the
interpolated values of the input vectors (or the 1st - 3rd derivatives)
}
\description{
\code{vec_fun()} converts an input vector to a continuous, thrice-differentiable
function. \code{i} is the function domain; if left empty, the vector indices will
be used. Interpolation is performed using
\code{\link[stats:splinefun]{splinefun(method = "natural")}}; see that
function for details.
}
\details{
\code{vec_fun()} is stricter than \code{splinefun()} in the accepted inputs; in
\code{vec_fun()}, \code{x} and \code{i} (if provided) must be cast-able to \code{double()} and
of the same length.

The \code{ties} argument determines behavior when two values have the same (\code{i}, \code{x})
coordinates. The default for \code{vec_fun()} is to assume the inputs are ordered
and proceed as usual; this is different than the default for \code{splinefun()}.
}
\keyword{internal}
